{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"predictive_modelling_XGB","provenance":[{"file_id":"1wF-9C0wwkniWGmaqoMd0uso7HFdowjLC","timestamp":1647519588129}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"CG3i0CW-xdTF"},"source":["from google.colab import drive\n","\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U04DKjPGxhSc"},"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import warnings\n","warnings.filterwarnings(\"ignore\", category=DeprecationWarning)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"T3kiI0F5xokf"},"source":["df = pd.read_excel(\"/content/drive/MyDrive/JDA/Predictive Modelling - Data file.xlsx\",sheet_name = \"train\") \n","    "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B2MAPr8xxrLi"},"source":["df['order_date_year'] = df['order_date'].dt.year\n","df['order_date_month'] = df['order_date'].dt.month\n","df['order_date_day'] = df['order_date'].dt.day\n","df['order_date_day_of_week'] = df['order_date'].dt.dayofweek"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U5oWNM7WxzCs"},"source":["#removing redundant and unnecessary columns\n","df.drop(columns = ['id','order_day_of_week'],inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kGkzyXTRx2gG"},"source":["from datetime import datetime\n","df.loc[df['order_date'] == df['forecast_start_date']].shape   #indicates order date is same as forecast_start_date for all the records\n","df['forecast_period'] = (df['forecast_end_date'] - df['forecast_start_date']).dt.days"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sLovf5u-yCvy"},"source":["#dropping date field columns\n","df.drop(columns = ['order_date','forecast_start_date','forecast_end_date'],inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"njqKoliyyGbb"},"source":["cat_cols = ['store','supplier_id','product_id','category',]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6D1tNQ_9yJHm"},"source":["df[cat_cols] = df[cat_cols].astype('category')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vrwiu3FWyVHp"},"source":["sample1_df = df.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"huTq2_KayWbd"},"source":["sample1_df['on_hand_quantity'] = sample1_df['on_hand_quantity'].apply(lambda x: 0 if x < 0 else x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"t7BTUIvvycP1"},"source":["# Taking 4k records (2000 each from store )for test data \n","sample1_s1_test = sample1_df.loc[sample1_df[\"store\"] == 's1'].iloc[-2000:,]\n","sample1_s2_test = sample1_df.loc[sample1_df[\"store\"] == 's2'].iloc[-2000:,]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gzfha2Fcydyw"},"source":["sample_test = pd.concat([sample1_s1_test,sample1_s2_test])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OFt5ibEByg7f"},"source":["sample_train = sample1_df[ ~sample1_df.isin(sample_test)].dropna()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sr3p6KKSyiSS"},"source":["sample_x_train = sample_train.drop(['actual_order_quantity'],axis = 1)\n","sample_y_train = sample_train['actual_order_quantity']\n","sample_x_test = sample_test.drop(['actual_order_quantity'],axis = 1)\n","sample_y_test = sample_test['actual_order_quantity']\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dVXihXjCym0r"},"source":["print(sample_x_train.shape)\n","print(sample_y_train.shape)\n","print(sample_x_test.shape)\n","print(sample_y_test.shape)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KtQMS2XHyuEf"},"source":["num_cols = list(set(df.columns.tolist()) - set(cat_cols))\n","input_num_cols = [x for x in num_cols if x!= \"actual_order_quantity\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0qXfjkUt11SS"},"source":["from sklearn.preprocessing import StandardScaler"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"eMbsNvUNyuMW"},"source":["#Standarsing and encoding\n","scaler2 = StandardScaler()\n","sample_x_train[input_num_cols]  = scaler2.fit_transform(sample_x_train[input_num_cols])\n","sample_x_test[input_num_cols]  = scaler2.transform(sample_x_test[input_num_cols])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HaS6w5uo0CTW"},"source":["!pip install category_encoders"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1R3qYSzs0I8r"},"source":["import category_encoders as ce"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GLOzfqMh0gW7"},"source":["cat_cols_for_encoding = [x for x in cat_cols if x != \"store\"]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hKFqnosY0-Fr"},"source":["# as there are only two levels in store not using binary encoder\n","sample_x_train[\"store\"] = sample_x_train[\"store\"].map({'s1':0 ,'s2':1})\n","sample_x_test[\"store\"] = sample_x_test[\"store\"].map({'s1':0 ,'s2':1})\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"m0L9tGav0LsA"},"source":["\n","binaryEncoder = ce.BinaryEncoder(cols= cat_cols_for_encoding,return_df=True)\n","sample_x_train_cat = binaryEncoder.fit_transform(sample_x_train[cat_cols_for_encoding])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rtM3dDCR0O8g"},"source":["sample_x_test_cat = binaryEncoder.transform(sample_x_test[cat_cols_for_encoding])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_TsmyDGPz9fk"},"source":["sample_x_train.drop(cat_cols_for_encoding,axis = 1,inplace=True)\n","sample_x_test.drop(cat_cols_for_encoding,axis = 1,inplace=True)\n","sample_x_train_final = sample_x_train.join(sample_x_train_cat)\n","sample_x_test_final = sample_x_test.join(sample_x_test_cat)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pEZsnBon0Wj4"},"source":[" sample_x_train_final['store'] = pd.to_numeric( sample_x_train_final['store'])\n"," sample_x_test_final['store'] = pd.to_numeric( sample_x_test_final['store'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8z_tH-pI1jFu"},"source":["from sklearn.model_selection import GridSearchCV"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"00RP1aTLz8F-"},"source":["\n","import xgboost as xgb\n","xgb1 = xgb.XGBRegressor()\n","parameters = {'nthread':[4], #when use hyperthread, xgboost may become slower\n","              'objective':['reg:linear'],\n","              'learning_rate': [.01,.03, 0.05, .07], #so called `eta` value\n","              'max_depth': [5, 6, 7,10],\n","              'min_child_weight': [4],\n","              'subsample': [0.7],\n","              'colsample_bytree': [0.7],\n","              'n_estimators': [100]}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lXEGGNTA1GX5"},"source":["xgb_grid = GridSearchCV(xgb1,\n","                        parameters,\n","                        cv = 10,\n","                        n_jobs = -1,\n","                        scoring='neg_root_mean_squared_error')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wkCU8VtA1IDZ"},"source":["%%time\n","xgb_grid.fit(sample_x_train_final,sample_y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"o7BlYntp1NXJ"},"source":["xgb_grid.best_params_"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ERFn8gK01U_c"},"source":["y_train_xgb_pred = xgb_grid.best_estimator_.predict(sample_x_train_final)\n","y_test_xgb_pred = xgb_grid.best_estimator_.predict(sample_x_test_final)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"k6esigAH1e-5"},"source":["#calculating rmse\n","from sklearn.metrics import mean_squared_error"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"izMZWAdY1VCu"},"source":["mean_squared_error(sample_y_train,y_train_xgb_pred, squared=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"n1WED13N1Y97"},"source":["mean_squared_error(sample_y_test,y_test_xgb_pred, squared=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B5SvDiV518H-"},"source":["y_train_xgb_pred.shape"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-aSpBERU7D-n"},"source":["new_df = sample_train.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZcG-XwrX8A7E"},"source":["new_df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zVwPt2_q8C8J"},"source":["new_df['pred_train'] = y_train_xgb_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hKradtmAFvzo"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pI2xjXFI8qZb"},"source":["new_df[['actual_order_quantity','pred_train']].plot()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pLi4BWOz9Gi8"},"source":["new_test_df = sample_test.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YIY9gFGv9nVk"},"source":["new_test_df['pred_test'] = y_test_xgb_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZIq_btNmFpIj"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0e7xn2bd9-Ht"},"source":["new_test_df.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"WjsENfNA91v4"},"source":["new_test_df[['actual_order_quantity','pred_test']].plot()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wkm47e-H97-T"},"source":[""],"execution_count":null,"outputs":[]}]}